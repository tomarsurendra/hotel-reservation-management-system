version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - my-network
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - my-network
  eureka:
    container_name: eureka
    build:
      context: eureka-registry
      dockerfile: Dockerfile
    image: eureka-registry:latest
    environment:
      SPRING_PROFILES_ACTIVE: docker      
    ports:
      - 8761:8761
    networks:
      - my-network
  customer-service:
    container_name: customer-service
    build:
      context: customer-service
      dockerfile: Dockerfile
    image: customer-service:latest
    environment:
      SPRING_PROFILES_ACTIVE: docker      
    ports:
      - 9001:9001
    networks:
      - my-network
  api-gateway:
    container_name: api-gateway
    build:
      context: api-gateway
      dockerfile: Dockerfile
    image: api-gateway:latest
    environment:
      SPRING_PROFILES_ACTIVE: docker      
    ports:
      - 8080:8080
    networks:
      - my-network   
  hotel-management-service:
    container_name: hotel-management-service
    build:
      context: hotel-management-service
      dockerfile: Dockerfile
    image: hotel-management-service:latest
    environment:
      SPRING_PROFILES_ACTIVE: docker      
    ports:
      - 9003:9003
    networks:
      - my-network  
  notification-service:
    container_name: notification-service
    build:
      context: notification-service
      dockerfile: Dockerfile
    image: notification-service:latest
    environment:
      SPRING_PROFILES_ACTIVE: docker      
    ports:
      - 9005:9005
    networks:
      - my-network  
  payment-service:
    container_name: payment-service
    build:
      context: payment-service
      dockerfile: Dockerfile
    image: payment-service:latest
    environment:
      SPRING_PROFILES_ACTIVE: docker      
    ports:
      - 9004:9004
    networks:
      - my-network   
  reservation-service:
    container_name: reservation-service
    build:
      context: reservation-service
      dockerfile: Dockerfile
    image: reservation-service:latest
    environment:
      SPRING_PROFILES_ACTIVE: docker      
    ports:
      - 9002:9002
    networks:
      - my-network                   
networks:
    my-network:
        driver: bridge
  